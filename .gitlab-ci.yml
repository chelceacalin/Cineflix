image: maven:3-openjdk-17-slim

default:
  tags:
    - esol-runner

stages:
  - build
#  - test
  - build-docker-image
  - release-new-version

build:
 stage: build
 script:
   - mvn -DskipTests package
 artifacts:
   paths:
     - target/*.jar

# test:
#  image: gitlab.esolutions.ro:5050/internship-2023/test/maven-openjdk-docker:1.0
#  stage: test
#  services:
#    - postgres:15-alpine
#  variables:
#    POSTGRES_DB: cineflix
#    POSTGRES_USER: cineflix
#    POSTGRES_PASSWORD: cineflix
#    SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5433/cineflix
#  dependencies:
#    - build
#  script:
#    - mvn $MAVEN_CLI_OPTS test

build-docker-image:
  image: docker:24.0.2
  stage: build-docker-image
  services:
    - docker:dind
  variables: 
    DOCKER_TLS_CERTDIR: ""
  dependencies:
    - build
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA


release-new-version:
  image: bitnami/git
  stage: release-new-version
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  needs:
    - build-docker-image
  before_script:
    - git config --global user.email "ci-robot"
    - git config --global user.name "ci-robot"
  script:
    - git clone https://ci-robot:$GIT_ACCESS_TOKEN@$CI_SERVER_HOST/cineflix/cineflix-k8s.git
    - cd cineflix-k8s
    # set the new docker image tag
    # dev
    - 'sed -i "/^\([[:space:]]*newTag: \).*/s//\1\"${CI_COMMIT_SHORT_SHA}\"/" backoffice/overlays/dev/kustomization.yaml'
    # prod
    - 'sed -i "/^\([[:space:]]*newTag: \).*/s//\1\"${CI_COMMIT_SHORT_SHA}\"/" backoffice/overlays/prod/kustomization.yaml'
    # push changes
    - git add .
    - git commit -m "Upgrade deployment with new docker image tag $CI_COMMIT_SHORT_SHA"
    - git remote set-url origin "https://ci-robot:$GIT_ACCESS_TOKEN@$CI_SERVER_HOST/cineflix/cineflix-k8s.git"
